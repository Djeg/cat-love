@use "../_variables.scss" as var;

$headerMinHeight: 80px;

/*
On utilise flex pour notre header, afin
d'afficher les block de gauche à droite

Les élément attaché (sans éspace) spécifie
un élément à désigner par éxemple ici nous
voulons designer :

"Le header avec la class .topnav"

Les éléments détaché (avec) espace spécifie
les enfant d'un élément a désigner :

example avec "header .topnav" :

"Toutes les balises avec la class
.topnav dans le header"
*/
header.topnav {
    display: flex;
    justify-content: space-between;
    background-color: var.$darkBlue;
    min-height: $headerMinHeight;

    /*
    Le caractére "&" signifie le sélécteur en cours,
    ici "header.topnav"

    On séléction tout (*) les enfants direct
    (>) de notre header.topnav
    */
    & > * {
        width: 33.33%;
    }

    /* On centre l'image de notre logo en
    utilisant flex et align-items */
    .logo {
        display: flex;
        align-items: center;
        justify-content: center;

        /* On peut imbriquer des règles CSS, ici
        on limite la hauteur de l'image de notre logo. */
        img {
            max-height: 60px;
        }
    }

    /* On aligne à droite le logo de l'utilisateur */
    .user-logo {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        padding-right: 10px;

        /* On agrandie et blanchie le logo d'utilisateur */
        i {
            color: white;
            font-size: 32px;
        }
    }

    /*
    On personalise notre burger icon
    */
    .burger {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        z-index: 10;
        background-color: var.$darkBlue;

        /*
        Ici tout ce qui concerne le design au dessus de 
        1366px. Généralement les desktop.
        */
        @include var.disableForDesktop();

        i {
            color: white;
            font-size: 40px;
        }
    }

    /* On utilise flex pour notre .menu, afin
    d'afficher les blocks de gauche à droite */
    nav.menu {
        display: flex;
        padding-left: 10px;

        /*
        Ici tout ce qui concerne le design en dessus de
        1366px. Généralement se sont les tablet
        */
        @include var.disableForMobileAndTablet();

        /* On définie chaque enfants d'un item comme
        "stretch" afin que la hauteur soit à 100% */
        .item {
            display: flex;
            align-items: stretch;
            /* Définie une propriété à animer */
            transition-property: background-color;
            /* Définie la durée de notre animation
            en seconde */
            transition-duration: 2s;

            /* On centre les enfant des liens dans nos
            items grace à flex et align-items */
            a {
                display: flex;
                align-items: center;
                text-decoration: none;
                font-size: 22px;
                color: var.$pink;
                padding: 0 10px;
            }

            /* Définie un effet lors du survol de la souris
            grace au pseudo élément :hover */
            &:hover {
                background-color: var.$pink;

                a {
                    color: var.$darkBlue;
                    /* Définie une propriété à animer */
                    transition-property: color;
                    /* Définie la durée de notre animation
                    en seconde */
                    transition-duration: 2s;
                }
            }

            /* On enléve le padding du première item de notre
            menu */
            &:first-child a {
                padding-left: 0;
            }

            /* On enléve le padding du dernière item de notre
            menu */
            &:last-child a {
                padding-right: 0;
            }
        }
    }

    /*
    Design du menu déroulant
    */
    .scroll-menu {
        position: absolute;
        margin-top: $headerMinHeight;
        background-color: var.$darkBlue;
        transform: translate(0px, -200px);
        transition-property: transform;
        transition-duration: .5s;
        z-index: 0;

        @include var.disableForDesktop();

        &.active {
            transform: translate(0px, 0px);
        }

        .item {
            a {
                display: block;
                padding: 10px;
                color: white;
                text-decoration: none;
                transition-property: color;
                transition-duration: .5s;

                &:hover {
                    color: var.$pink;
                }
            }
        }
    }
}