/*
Importe un autre fichier sass dans notre fichier
*/
@import "_variables.scss";

html, body {
    margin: 0;
    padding: 0;
}

/* On redimensionne la balise main de sorte
à ce qu'elle prenne toute la hauteur de la
page */
main {
    min-height: 100vh;
    min-width: 100vw;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* On applique un flex-grow sur notre content
afin qu'il prenne l'espace entre deux autre
block */
.content {
    flex-grow: 2;
    background-color: $lightBlue;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* On colorie l'arriere plan du footer et
du header */
footer, header {
    background-color: $darkBlue;
}

/* On donne une hauteur minimum au footer et
au header */
footer {
    min-height: 300px;
}
header {
    min-height: 80px;
}

/*
On utilise flex pour notre header, afin
d'afficher les block de gauche à droite

Les élément attaché (sans éspace) spécifie
un élément à désigner par éxemple ici nous
voulons designer :

"Le header avec la class .topnav"

Les éléments détaché (avec) espace spécifie
les enfant d'un élément a désigner :

example avec "header .topnav" :

"Toutes les balises avec la class
.topnav dans le header"
*/
header.topnav {
    display: flex;
    justify-content: space-between;

    /*
    Le caractére "&" signifie le sélécteur en cours,
    ici "header.topnav"

    On séléction tout (*) les enfants direct
    (>) de notre header.topnav
    */
    & > * {
        width: 33.33%;
    }

    /* On centre l'image de notre logo en
    utilisant flex et align-items */
    .logo {
        display: flex;
        align-items: center;
        justify-content: center;

        /* On peut imbriquer des règles CSS, ici
        on limite la hauteur de l'image de notre logo. */
        img {
            max-height: 60px;
        }
    }

    /* On aligne à droite le logo de l'utilisateur */
    .user-logo {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        padding-right: 10px;

        /* On agrandie et blanchie le logo d'utilisateur */
        i {
            color: white;
            font-size: 32px;
        }
    }

    /*
    On personalise notre burger icon
    */
    .burger {
        display: flex;
        align-items: center;
        justify-content: flex-start;

        /*
        Ici tout ce qui concerne le design au dessus de 
        1366px. Généralement les desktop.
        */
        @media screen and (min-width: $desktopBreakpoint + 1px) {
            display: none;
        }

        i {
            color: white;
            font-size: 40px;
        }
    }

    /* On utilise flex pour notre .menu, afin
    d'afficher les blocks de gauche à droite */
    nav.menu {
        display: flex;
        padding-left: 10px;

        /*
        Ici tout ce qui concerne le design en dessus de
        1366px. Généralement se sont les tablet
        */
        @media screen and (max-width: $desktopBreakpoint) {
            display: none;
        }

        /* On définie chaque enfants d'un item comme
        "stretch" afin que la hauteur soit à 100% */
        .item {
            display: flex;
            align-items: stretch;
            /* Définie une propriété à animer */
            transition-property: background-color;
            /* Définie la durée de notre animation
            en seconde */
            transition-duration: 2s;

            /* On centre les enfant des liens dans nos
            items grace à flex et align-items */
            a {
                display: flex;
                align-items: center;
                text-decoration: none;
                font-size: 22px;
                color: $pink;
                padding: 0 10px;
            }

            /* Définie un effet lors du survol de la souris
            grace au pseudo élément :hover */
            &:hover {
                background-color: $pink;

                a {
                    color: $darkBlue;
                    /* Définie une propriété à animer */
                    transition-property: color;
                    /* Définie la durée de notre animation
                    en seconde */
                    transition-duration: 2s;
                }
            }

            /* On enléve le padding du première item de notre
            menu */
            &:first-child a {
                padding-left: 0;
            }

            /* On enléve le padding du dernière item de notre
            menu */
            &:last-child a {
                padding-right: 0;
            }
        }
    }
}


/* Définie un container central de largeur fixe */
.container {
    width: 650px;
    padding-top: 10px;
}

/* Définie le style d'une carte */
.card {
    background-color: $darkBlue;
    color: white;
    min-width: 200px;
    margin-bottom: 10px;
}

/*
Un media queries permet de rajouter du css pour
des médias données. Il permet de personnaliser
le css en fonction de la taille d'un écran.

Ici on applique du css sur tout les écran qui ne dépasse
pas 1048px de largeur.

@media screen and (max-width: 1048px) {
    header.topnav nav.menu .item a {
        font-size: 18px;
    }
}
@media screen and (max-width: 860px) {
    header.topnav nav.menu .item a {
        font-size: 16px;
    }
}
*/

